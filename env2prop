#!/usr/bin/env node
"use strict"

function envToProp( opts){
	var
	  prefixes= opts&& opts.prefixes&& opts.prefixes.map( p=> new RegExp( p, "i"))
	return function envToProp( env){
		env= env|| process.env
		var
		  fragments = env.split( "_"),
		  first= fragments[0],
		  prefixIndexes= prefixes&& prefixes.filter(p=> p.test(first))|| [],
		  prefix= null
		if(prefixIndexes.length){
			prefix= fragments.shift().toLowerCase()
		}
		for(var i= 0; i< fragments.length; ++i){
			var
			  fragment= fragments[ i].toLowerCase()
			if(i > 0){
				fragment= fragment.charAt( 0).toUpperCase() + fragment.substring( 1)
			}
			fragments[i]= fragment
		}
		var res= fragments.join("")
		return prefixes? (prefix? [res, prefix]: [res]): res
	}
}

module.exports= envToProp
module.exports.EnvToProp= envToProp
module.exports.default= envToProp

var propToEnv
Object.defineProperty( module.exports, "PropToEnv", {
	get: function(){
		return propToEnv || (propTopToEnv = require("./prop2env"))
	},
	enumerable: true
})

if(require.main=== module){
	for(var i= 2; i< process.argv.length; ++i){
		console.log(envToProp(process.argv[i]))
	}
}
