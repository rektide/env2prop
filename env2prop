#!/usr/bin/env node
"use strict"

function envToProp( env, opts){
	var
	  fragments = env.split( "_"),
	  prefixes= opts&& opts.prefixes&& opts.prefixes.map(p=> p.toUpperCase()),
	  prefixIndex= prefixes&& prefixes.indexOf(fragments[0]),
	  prefix= prefixIndex!== -1 && prefixes[prefixIndex]
	if(prefix){
		fragments.shift()
	}
	for(var i= 0; i< fragments.length; ++i){
		var
		  fragment= fragments[ i].toLowerCase()
		if(i > 0){
			fragment= fragment.charAt( 0).toUpperCase() + fragment.substring( 1)
		}
		fragments[i]= fragment
	}
	var res= fragments.join("")
	return prefixes? (prefix? [res, prefix]: [res]): res
}

module.exports= envToProp
module.exports.EnvToProp= envToProp
module.exports.default= envToProp

var propToEnv
Object.defineProperty( module.exports, "PropToEnv", {
	get: function(){
		return propToEnv || (propTopToEnv = require("./prop2env"))
	},
	enumerable: true
})

if(require.main=== module){
	for(var i= 2; i< process.argv.length; ++i){
		console.log(envToProp(process.argv[i]))
	}
}
